@using DragonFruit.Sakura.Network
@using DragonFruit.Sakura.Changelogs.Components

<MudStack Row="true" AlignItems="AlignItems.Center" Spacing="3">
    <MudAutocomplete T="string"
                     Label="Version"
                     CoerceText="true"
                     CoerceValue="true"
                     Variant="Variant.Outlined"
                     @bind-Value="RequestVersion"
                     ResetValueOnEmptyText="true"
                     SearchFunc="SearchReleases"/>

    <MudButton Color="Color.Info"
               OnClick="LoadRelease"
               StartIcon="@Icons.Material.Rounded.CloudSync">
        @(VersionHints?.Contains(RequestVersion, StringComparer.OrdinalIgnoreCase) == true ? "Load" : "Validate")
    </MudButton>
</MudStack>

@if (Target != null)
{
    <MudStack>
        <MudExpansionPanels MultiExpansion="true" Class="mt-4" Elevation="0">
            @foreach (var modification in Target.Modifications)
            {
                <MudExpansionPanel Text="@modification.Title">
                    <TitleContent>
                        <ChangelogEntry Entry="modification"/>
                    </TitleContent>
                    <ChildContent>
                        <MudStack>
                            <MudSelect Label="Change Type" Variant="Variant.Outlined" @bind-Value="modification.Type">
                                @foreach (var type in Enum.GetValues<ChangelogModificationType>())
                                {
                                    <MudSelectItem Value="type">@type.ToString()</MudSelectItem>
                                }
                            </MudSelect>

                            <MudTextField Label="Title" Variant="Variant.Outlined" @bind-Value="modification.Title"/>
                            <MudAutocomplete Label="Category" Variant="Variant.Outlined" @bind-Value="modification.Category" CoerceText="true" CoerceValue="true" SearchFunc="(s, _) => SearchCategories(modification, s)"/>
                            <MudTextField Label="Description" Variant="Variant.Outlined" Lines="6" @bind-Value="modification.Description"/>

                            <MudStack Row="true">
                                <MudSwitch T="bool" Color="Color.Primary" Label="Major Change" @bind-Value="modification.Major"/>

                                <MudSpacer/>

                                @if (!IsTargetNew)
                                {
                                    <MudButton Color="Color.Info"
                                               StartIcon="@Icons.Material.Rounded.Save"
                                               OnClick="() => SaveModification(modification)">
                                        Save
                                    </MudButton>
                                }
                                <MudButton Color="Color.Error"
                                           StartIcon="@Icons.Material.Rounded.Delete"
                                           OnClick="async () => await DeleteModification(modification)">
                                    Delete
                                </MudButton>
                            </MudStack>
                        </MudStack>
                    </ChildContent>
                </MudExpansionPanel>
            }
        </MudExpansionPanels>

        <MudStack Row="true" Justify="Justify.FlexEnd">
            <MudButton Color="Color.Success"
                       StartIcon="@Icons.Material.Rounded.Add"
                       OnClick="() => Target.Modifications.Add(DefaultModification)">
                Add Modification
            </MudButton>

            @if (IsTargetNew && Target.Modifications.Any())
            {
                <MudButton Color="Color.Info"
                           OnClick="SaveNewRelease"
                           StartIcon="@Icons.Material.Rounded.Save">
                    Save Release
                </MudButton>
            }

            <MudButton Color="Color.Error"
                       OnClick="DeleteRelease"
                       StartIcon="@Icons.Material.Rounded.DeleteForever">
                Delete Release
            </MudButton>
        </MudStack>
    </MudStack>
}