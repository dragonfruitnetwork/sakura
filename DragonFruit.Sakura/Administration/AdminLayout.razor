@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using DragonFruit.Sakura.Network
@inherits LayoutComponentBase
@layout DefaultLayout

<SakuraJumbotron>
    @if (Client.IsServerSide)
    {
        <MudStack Spacing="2" AlignItems="AlignItems.Center" Justify="Justify.Center">
            <MudIcon Size="Size.Large" Icon="@Icons.Rounded.Badge"/>
            <MudText Typo="Typo.h6">Loading page...</MudText>
        </MudStack>
    }
    else
    {
        <AuthorizeView>
            <Authorized>
                @Body
            </Authorized>
            <Authorizing>
                <MudStack Spacing="2" AlignItems="AlignItems.Center" Justify="Justify.Center">
                    <MudIcon Size="Size.Large" Icon="@Icons.Rounded.Badge"/>
                    <MudText Typo="Typo.h6">Checking Authentication Status...</MudText>
                </MudStack>
            </Authorizing>
            <NotAuthorized>
                <MudStack Spacing="2" AlignItems="AlignItems.Center" Justify="Justify.Center">
                    <MudIcon Size="Size.Large" Icon="@Icons.Rounded.Badge"/>
                    <MudText Typo="Typo.h6">Authentication Required</MudText>
                    <MudText>This is an internal page that requires a valid login to access</MudText>

                    <MudButton Class="mt-4"
                               Color="Color.Secondary"
                               OnClick="RedirectToLoginPage"
                               StartIcon="@Icons.Rounded.Fingerprint">
                        Login via DragonFruit
                    </MudButton>
                </MudStack>
            </NotAuthorized>
        </AuthorizeView>
    }
</SakuraJumbotron>

@code {

    [Inject]
    private SakuraClient Client { get; set; }

    [Inject]
    private NavigationManager Navigation { get; set; }

    [Inject]
    private IOptionsSnapshot<RemoteAuthenticationOptions<OidcProviderOptions>> OptionsContainer { get; set; }

    private void RedirectToLoginPage()
    {
        var path = OptionsContainer.Get(Options.DefaultName).AuthenticationPaths.LogInPath;
        Navigation.NavigateToLogin(path);
    }

}