@page "/wiki/"
@page "/wiki/{*path}"

@if (PageContent == null)
{
    <PageTitle>Wiki &middot; DragonFruit Network</PageTitle>
}
else
{
    <PageTitle>@PageContent.Title &middot; DragonFruit Wiki</PageTitle>
}

<HeadContent>
    <meta property="theme-color" content="#9c27b0"/>
    <meta property="og:title" content="@(PageContent?.Title ?? "Wiki") &middot; DragonFruit Network"/>
    <meta name="keywords" content="@string.Join(", ", PageContent?.Tags ?? Enumerable.Empty<string>())"/>
    
    <link rel="canonical" href="https://dragonfruit.network/wiki/@(Path)"/>

    <link rel="stylesheet" href="/styles/wiki.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jetbrains-mono@1.0.6/css/jetbrains-mono.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/prismjs@1.26.0/themes/prism-tomorrow.min.css"/>
</HeadContent>

<GlobalNavigation/>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudStack Spacing="4">
        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Spacing="3" Class="flex-wrap">
            <MudLink Href="/wiki"
                     Typo="Typo.h5"
                     Color="Color.Default"
                     Underline="Underline.None">
                Wiki
            </MudLink>
            @if (PageContent != null)
            {
                <MudBreadcrumbs Items="GenerateBreadcrumbs()" Class="p-0"/>
            }
        </MudStack>

        <MudPaper Elevation="0" Class="px-4 py-3" Style="min-height: 75vh">
            @if (PageContent == null)
            {
                // dummy content
                <MudSkeleton SkeletonType="SkeletonType.Text" Height="50px" Width="250px"/>

                <MudStack Spacing="1" Class="mt-3">
                    @for (var i = 0; i < 15; i++)
                    {
                        <MudSkeleton SkeletonType="SkeletonType.Text" Height="30px" Width="100%"/>
                    }
                </MudStack>
            }
            else
            {
                // main content
                <MudStack Style="min-height: inherit">
                    @if (PageContent?.Stub == true)
                    {
                        <MudAlert Severity="Severity.Warning" Icon="@Icons.Rounded.PieChart">
                            This article is a stub and is waiting for expansion.
                        </MudAlert>
                    }
                    else if (PageContent?.Outdated == true)
                    {
                        <MudAlert Severity="Severity.Info" Icon="@Icons.Rounded.History">
                            This article is outdated and needs reviewing to ensure the content is up-to-date.
                        </MudAlert>
                    }

                    <div id="wiki-content">
                        @PageContent?.Content
                    </div>

                    @if (PageMetadata != null)
                    {
                        <MudSpacer/>
                        <MudDivider DividerType="DividerType.FullWidth" FlexItem="true" Style="flex-grow: 0"/>

                        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Spacing="3" Class="flex-wrap-reverse">
                            <MudTooltip Text="@PageMetadata.LastCommitMessage" Placement="Placement.End">
                                <MudText Typo="Typo.caption">Last updated @PageMetadata.LastUpdated.ToString("D")</MudText>
                            </MudTooltip>

                            <MudStack Row="true" AlignItems="AlignItems.Center">
                                <MudTooltip Text="Page Authors" Placement="Placement.Start">
                                    <MudAvatarGroup Max="5" Spacing="2">
                                        @foreach (var author in PageMetadata.Authors)
                                        {
                                            <MudAvatar Image="@author.AvatarUrl" Size="Size.Small" Style="align-items: unset">
                                                @(string.IsNullOrEmpty(author.AvatarUrl) ? char.ToUpperInvariant(author.Username[0]) : null)
                                            </MudAvatar>
                                        }
                                    </MudAvatarGroup>
                                </MudTooltip>

                                <MudDivider Vertical="true" FlexItem="true"/>

                                <MudButton Target="_blank"
                                           Size="Size.Small"
                                           Color="Color.Transparent"
                                           Href="@PageMetadata.GitHubPageUrl"
                                           StartIcon="@Icons.Custom.Brands.GitHub">
                                    View on GitHub
                                </MudButton>
                            </MudStack>
                        </MudStack>
                    }
                </MudStack>
            }
        </MudPaper>
    </MudStack>
</MudContainer>
<SakuraFooter/>